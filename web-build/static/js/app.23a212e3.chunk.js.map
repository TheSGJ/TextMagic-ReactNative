{"version":3,"sources":["App.js"],"names":["App","useState","textPreview","setTextPreview","style","styles","container","Header","background","Content","title","textAreaContainer","textArea","onChange","event","target","value","underlineColorAndroid","placeholder","placeholderTextColor","numberOfLines","multiline","buttonPlot","btnBox","textForm","onPress","button","textStyle","scrollEnabled","textAlign","fontWeight","fontSize","marginTop","disabled","StyleSheet","create","flex","backgroundColor","borderColor","borderWidth","padding","marginLeft","marginRight","height","justifyContent","alignItems","borderRadius","elevation","color","width","paddingTop","paddingBottom","flexDirection","flexWrap"],"mappings":"2PAee,SAASA,IACtB,MAAsCC,mBAAS,IAA/C,WAAOC,EAAP,KAAoBC,EAApB,KAUA,OACE,qCACE,eAAC,UAAD,CAAcC,MAAOC,EAAOC,UAA5B,UACE,cAAC,YAAD,CAAWF,MAAM,SACjB,cAAC,UAAOG,OAAR,CAAeH,MAAO,CAAEI,WAAY,WAApC,SACA,cAAC,UAAOC,QAAR,CAAgBC,MAAM,gBAEtB,cAAC,UAAD,CAAMN,MAAOC,EAAOM,kBAApB,SACE,cAAC,UAAD,CACEP,MAAOC,EAAOO,SACdC,SAnBa,SAACC,GACtBX,EAAeW,EAAMC,OAAOC,QAmBpBA,MAAOd,EACPe,sBAAsB,cACtBC,YAAY,oBACZC,qBAAqB,QACrBC,cAAe,GACfC,WAAW,MAGf,cAAC,UAAD,CAAMjB,MAAOC,EAAOiB,WAApB,SAEI,cAAC,UAAD,CAAMlB,MAAOC,EAAOkB,OAApB,SAEA,cAAC,UAAD,CAAMnB,MAAOC,EAAOmB,SAApB,SACA,cAAC,UAAD,CAAkBC,QA7BJ,WAEtBtB,EADgB,KA4BoCC,MAAOC,EAAOqB,OAA1D,SACE,cAAC,UAAD,CAAMtB,MAAOC,EAAOsB,UAApB,iDAQR,cAAC,UAAD,UACA,eAAC,UAAD,CAAYC,eAAe,EAA3B,UACE,cAAC,UAAD,UACF,cAAC,UAAD,CAAMxB,MAAO,CAAEyB,UAAW,SAAUC,WAAY,OAAQC,SAAU,GAAIC,UAAU,IAAhF,6BAIA,cAAC,UAAD,CAAM5B,MAAOC,EAAOH,YAApB,SAAiC,cAAC,UAAD,UAAOA,WAGxC,cAAC,UAAD,CAAQQ,MAAM,iCAAiCuB,UAAU,OAK/D,IAAM5B,EAAS6B,UAAWC,OAAO,CAC/B7B,UAAW,CACT8B,KAAM,EACNC,gBAAiB,QAEnB1B,kBAAmB,CACjB2B,YAAa,OACbC,YAAa,EACbC,QAAS,EACTR,UAAW,GACXS,WAAY,GACZC,YAAa,IAEf9B,SAAU,CACR+B,OAAQ,IACRC,eAAgB,aAChBb,SAAU,IAEZ7B,YAAa,CACXkC,KAAM,EACNS,WAAY,SAEZhB,UAAW,SACXE,SAAU,GACVU,WAAY,GACZC,YAAY,IAEdhB,OAAQ,CACNoB,aAAc,GACdN,QAAS,GACTO,UAAW,EACXV,gBAAiB,WAGnBV,UAAW,CACTqB,MAAO,QACPlB,WAAY,OACZD,UAAW,UAEbL,SAAU,CACRyB,MAAO,GACPR,WAAY,GACZC,YAAa,IAEfpB,WAAY,CACVuB,WAAY,SACZd,SAAU,GACVmB,WAAY,EACZC,cAAe,IAEjB5B,OAAQ,CACN6B,cAAe,MACfC,SAAU,OACVR,WAAY,aACZb,UAAW,O","file":"static/js/app.23a212e3.chunk.js","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { Appbar } from \"react-native-paper\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  SafeAreaView,\n  TextInput,\n  Button,\n  Pressable,\n  Platform,\n  TouchableOpacity,\n  ScrollView\n} from \"react-native\";\nexport default function App() {\n  const [textPreview, setTextPreview] = useState(\"\");\n  const handleOnChange = (event) => {\n    setTextPreview(event.target.value);\n  };\n\n  const handleClearText = () => {\n    let clearText = \"\";\n    setTextPreview(clearText);\n  };\n \n  return (\n    <>\n      <SafeAreaView style={styles.container}>\n        <StatusBar style=\"auto\" />\n        <Appbar.Header style={{ background: '#87CEEB' }}>\n        <Appbar.Content title=\"TextMagic\" />\n        </Appbar.Header>\n        <View style={styles.textAreaContainer}>\n          <TextInput\n            style={styles.textArea}\n            onChange={handleOnChange}\n            value={textPreview}\n            underlineColorAndroid=\"transparent\"\n            placeholder=\"Type something...\"\n            placeholderTextColor=\"black\"\n            numberOfLines={10}\n            multiline={true}\n          />\n        </View>\n        <View style={styles.buttonPlot}>\n          \n            <View style={styles.btnBox}>\n          \n            <View style={styles.textForm}>\n            <TouchableOpacity onPress={handleClearText} style={styles.button}>\n              <Text style={styles.textStyle}>üóëÔ∏è Clear</Text>\n            </TouchableOpacity>\n          \n            </View>\n            \n          </View>\n        </View>\n      </SafeAreaView>\n      <SafeAreaView>\n      <ScrollView scrollEnabled={true}>\n        <View>\n      <Text style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: 22, marginTop:10 }}>\n        Text Preview:\n      </Text>\n        </View>\n      <View style={styles.textPreview}><Text>{textPreview}</Text></View>\n      </ScrollView>\n      </SafeAreaView>\n      <Button title='TextMagic - Dev Version v1.0.1' disabled={true}></Button>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  textAreaContainer: {\n    borderColor: \"grey\",\n    borderWidth: 1,\n    padding: 5,\n    marginTop: 25,\n    marginLeft: 20,\n    marginRight: 20,\n  },\n  textArea: {\n    height: 150,\n    justifyContent: \"flex-start\",\n    fontSize: 18,\n  },\n  textPreview: {\n    flex: 1,\n    alignItems: \"center\",\n    // justifyContent: 'center',\n    textAlign: \"center\",\n    fontSize: 19,\n    marginLeft: 18,\n    marginRight:18,\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n    backgroundColor: \"#3F0FB7\",\n  },\n\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  textForm: {\n    width: 90,\n    marginLeft: 15,\n    marginRight: 15\n  },\n  buttonPlot: {\n    alignItems: 'center',\n    fontSize: 19,\n    paddingTop: 8,\n    paddingBottom: 20\n  },\n  btnBox: {\n    flexDirection: 'row',\n    flexWrap: 'wrap' ,\n    alignItems: 'flex-start',\n    marginTop: 25\n  }\n});\n"],"sourceRoot":""}